name: Terraform & ArgoCD Cluster Registration, Repository & App Creation

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}  # ArgoCD server address
      ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}    # ArgoCD Admin token
      GIT_REPO_URL: ${{ secrets.GIT_REPO_URL }}    # Git repo URL for ArgoCD to sync from
      GIT_REPO_BRANCH: ${{ secrets.GIT_REPO_BRANCH }}  # Branch to use for ArgoCD application
      ARGOCD_INSECURE: "true"  # Only if using self-signed certs



    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install ArgoCD CLI
        run: |
          ls
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
          # sudo mv argocd-linux-amd64 /usr/local/bin/argocd
          # sudo chmod +x /usr/local/bin/argocd
          argocd 
          argocd version
     


      # - name: Register Kubernetes Cluster in ArgoCD
      #   run: |
      #     ls
      #     touch kubeconfig.yaml
      #     echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
      #     ls
      #     cat kubeconfig.yaml
          
      #     # Register the Kubernetes cluster with ArgoCD
      #     argocd cluster add --kubeconfig kubeconfig.yaml --name tenant-a --server $ARGOCD_SERVER --auth-token $ARGOCD_TOKEN

      # - name: Register Git Repository in ArgoCD
      #   run: |
      #     # Add the Git repository to ArgoCD
      #     argocd repo add $GIT_REPO_URL \
      #       --name my-repo \
      #       --username ${{ secrets.GIT_REPO_USERNAME }} \
      #       --password ${{ secrets.GIT_REPO_PASSWORD }} \
      #       --type git \
      #       --insecure-ignore-host-key

      # - name: Create ArgoCD Application
      #   run: |
      #     # Create the ArgoCD application from the Git repository
      #     argocd app create my-app \
      #       --repo $GIT_REPO_URL \
      #       --path ./man \
      #       --dest-server https://kubernetes.default.svc \
      #       --dest-namespace default \
      #       --revision $GIT_REPO_BRANCH \
      #       --sync-policy automated \
      #       --sync-option Prune=true
          
      #     # Sync the application to apply the resources
      #     argocd app sync my-app
